<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

    <Style x:Key="CheckFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               SnapsToDevicePixels="true"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="CheckBoxControlTemplate" TargetType="{x:Type CheckBox}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Checked">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="CheckMark"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="UnChecked">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="CheckMark"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Nulled">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="CheckWhat"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="CheckMark"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="UnNulled">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="CheckWhat"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FalseChecked">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="CheckFalse"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FalseUnchecked" />
        </ControlTemplate.Resources>
        <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
            <BulletDecorator.Bullet>
                <Grid Width="28" Height="28">
                    <Border Margin="4,6,4,2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="4" />
                    <Image x:Name="CheckMark"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Opacity="0"
                           Source="{DynamicResource CheckIcon}"
                           Stretch="Uniform" />
                </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </BulletDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="true">
                <Setter Property="FocusVisualStyle" Value="{StaticResource CheckFocusVisual}" />
                <Setter Property="Padding" Value="2,0,0,0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="UnChecked_BeginStoryboard1" Storyboard="{StaticResource UnChecked}" />
                    <RemoveStoryboard BeginStoryboardName="Checked_BeginStoryboard1" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="Checked_BeginStoryboard1" Storyboard="{StaticResource Checked}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="UnNulled_BeginStoryboard" Storyboard="{StaticResource UnNulled}" />
                    <RemoveStoryboard BeginStoryboardName="Nulled_BeginStoryboard" />
                    <!--
                        <BeginStoryboard Storyboard="{StaticResource UnChecked}" x:Name="UnChecked_BeginStoryboard3"/>
                        <RemoveStoryboard BeginStoryboardName="Checked_BeginStoryboard1"/>
                    -->
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="Nulled_BeginStoryboard" Storyboard="{StaticResource Nulled}" />
                </Trigger.EnterActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="YesNoCheckBoxControlTemplate" TargetType="{x:Type CheckBox}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Checked">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="CheckMark"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="UnChecked">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="CheckMark"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Nulled">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="CheckWhat"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="CheckMark"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="UnNulled">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="CheckWhat"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FalseChecked">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="CheckFalse"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FalseUnchecked" />
        </ControlTemplate.Resources>
        <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
            <BulletDecorator.Bullet>
                <Grid Width="25" Height="25">
                    <Image x:Name="CheckWhat"
                           Margin="1"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Opacity="0"
                           Source="{DynamicResource WhatIcon}"
                           Stretch="Uniform"
                           Visibility="Visible" />
                    <Image x:Name="CheckMark"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Opacity="0"
                           Source="{DynamicResource ThreeStateCheckTrueIcon}"
                           Stretch="Uniform" />
                    <Image x:Name="CheckFalse"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Opacity="0"
                           Source="{DynamicResource ThreeStateCheckFalseIcon}"
                           Stretch="Uniform" />

                </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </BulletDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="true">
                <Setter Property="FocusVisualStyle" Value="{StaticResource CheckFocusVisual}" />
                <Setter Property="Padding" Value="2,0,0,0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="UnChecked_BeginStoryboard1" Storyboard="{StaticResource UnChecked}" />
                    <RemoveStoryboard BeginStoryboardName="Checked_BeginStoryboard1" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="Checked_BeginStoryboard1" Storyboard="{StaticResource Checked}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="UnNulled_BeginStoryboard" Storyboard="{StaticResource UnNulled}" />
                    <RemoveStoryboard BeginStoryboardName="Nulled_BeginStoryboard" />
                    <!--
                        <BeginStoryboard Storyboard="{StaticResource UnChecked}" x:Name="UnChecked_BeginStoryboard3"/>
                        <RemoveStoryboard BeginStoryboardName="Checked_BeginStoryboard1"/>
                    -->
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="Nulled_BeginStoryboard" Storyboard="{StaticResource Nulled}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource FalseUnchecked}" />
                    <RemoveStoryboard BeginStoryboardName="FalseChecked_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="FalseChecked_BeginStoryboard" Storyboard="{StaticResource FalseChecked}" />
                </Trigger.EnterActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SwitchCheckBoxControlTemplate" TargetType="{x:Type CheckBox}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Checked" />
            <Storyboard x:Key="UnChecked" />
        </ControlTemplate.Resources>
        <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
            <BulletDecorator.Bullet>
                <Grid Width="50" Height="25">
                    <Border BorderThickness="2" ScrollViewer.CanContentScroll="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="OnColumn" Width="*" />
                                <ColumnDefinition x:Name="OffColumn" Width="0*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="OnBorder"
                                    HorizontalAlignment="Stretch"
                                    Background="{DynamicResource LightBrush1}">
                                <TextBlock x:Name="OnTextBlock"
                                           Text="On"
                                           TextWrapping="Wrap"
                                           Visibility="Collapsed" />
                            </Border>
                            <Border x:Name="OffBorder"
                                    Grid.Column="1"
                                    Margin="0,1,1,1"
                                    HorizontalAlignment="Stretch">
                                <TextBlock x:Name="OffTextBlock"
                                           TextWrapping="Wrap"
                                           Visibility="Collapsed"><Run Text="Off" />
                                </TextBlock>
                            </Border>
                        </Grid>
                    </Border>
                    <Rectangle x:Name="SliderRectangle"
                               Width="12"
                               Height="Auto"
                               HorizontalAlignment="Left"
                               Fill="#FFF4F4F5"
                               Stroke="Black"
                               StrokeThickness="2" />
                </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </BulletDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="true">
                <Setter Property="FocusVisualStyle" Value="{StaticResource EdocCheckFocusVisual}" />
                <Setter Property="Padding" Value="2,0,0,0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="UnChecked_BeginStoryboard1" Storyboard="{StaticResource UnChecked}" />
                    <RemoveStoryboard BeginStoryboardName="Checked_BeginStoryboard1" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="Checked_BeginStoryboard1" Storyboard="{StaticResource Checked}" />
                </Trigger.EnterActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <SolidColorBrush x:Key="CheckedBrush" Color="{DynamicResource CheckedColor2Key}" />
    <SolidColorBrush x:Key="UncheckedBrush" Color="{DynamicResource UncheckedColor2Key}" />

    <LinearGradientBrush x:Key="CheckedOrange" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FFCA6A13" />
        <GradientStop Offset="0.2" Color="#FFF67D0C" />
        <GradientStop Offset="0.2" Color="#FFFE7F0C" />
        <GradientStop Offset="0.5" Color="#FFFA8E12" />
        <GradientStop Offset="0.5" Color="#FFFF981D" />
        <GradientStop Offset="1" Color="#FFFCBC5A" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="CheckedOrangeBorder" Color="#FF8E4A1B" />
    <SolidColorBrush x:Key="CheckedBlueBorder" Color="#FF143874" />


    <ControlTemplate x:Key="SwitchCheckBoxTemplate" TargetType="{x:Type CheckBox}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="OnChecking">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="slider"
                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="48">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnUnchecking">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="slider"
                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="CheckGrid"
              Width="Auto"
              Height="Auto"
              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
              VerticalAlignment="{TemplateBinding VerticalAlignment}"
              ScrollViewer.VerticalScrollBarVisibility="Disabled"
              d:DesignHeight="50"
              d:DesignWidth="649.92">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ContentPresenter x:Name="contentPresenter"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Grid Grid.Column="2"
                  Width="72"
                  Height="35"
                  Margin="12,0,0,0"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center">
                <Border x:Name="BackgroundBorder"
                        Width="Auto"
                        Height="Auto"
                        Margin="0,6"
                        BorderBrush="#FF939393"
                        BorderThickness="{DynamicResource StandardControlBorderThickness}"
                        CornerRadius="{DynamicResource StandardControlRadius}">
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource UncheckedColor2Key}" />
                    </Border.Background>
                </Border>
                <Border x:Name="slider"
                        Width="24"
                        Height="35"
                        Margin="0"
                        HorizontalAlignment="Left"
                        Background="{DynamicResource LightBrush1}"
                        BorderThickness="{DynamicResource StandardControlBorderThickness}"
                        CornerRadius="{DynamicResource StandardControlRadius}"
                        RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                            <SkewTransform AngleX="0" AngleY="0" />
                            <RotateTransform Angle="0" />
                            <TranslateTransform X="0" Y="0" />
                        </TransformGroup>
                    </Border.RenderTransform>
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource EnabledColorKey}" />

                    </Border.BorderBrush>
                </Border>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="OnUnchecking_BeginStoryboard" Storyboard="{StaticResource OnUnchecking}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="OnChecking_BeginStoryboard" Storyboard="{StaticResource OnChecking}" />
                </Trigger.EnterActions>
                <!--
                    <Setter TargetName="On" Property="Stroke" Value="White" /
                    <Setter TargetName="Off" Property="Stroke" Value="White" />
                -->
                <!--  Change Orange or Blue color here  -->
                <Setter TargetName="BackgroundBorder" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource CheckedColor2Key}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <!--  ToDo: Add Style for Isenabled == False  -->
                <Setter TargetName="slider" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource SliderDisabledColorKey}" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="slider" Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource DisabledColorKey}" />
                    </Setter.Value>
                </Setter>

            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>
