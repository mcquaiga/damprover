<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="LoadInspectionCertDataSet" targetNamespace="http://tempuri.org/LoadInspectionCertDataSet.xsd" xmlns:mstns="http://tempuri.org/LoadInspectionCertDataSet.xsd" xmlns="http://tempuri.org/LoadInspectionCertDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="dam_proverConnectionString" ConnectionStringObject="" IsAppSettingsProperty="True" Modifier="Assembly" Name="dam_proverConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DAM_Prover.My.MySettings.GlobalReference.Default.dam_proverConnectionString" Provider="MySql.Data.MySqlClient">
          </Connection>
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InspecTableAdapter" GeneratorDataComponentClassName="InspecTableAdapter" Name="Inspec" UserDataComponentName="InspecTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dam_proverConnectionString (MySettings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="False" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="False" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT     inspection_cert.inspection_id, inspection_cert.`date`, customers.name, inspection_cert.comments
FROM         inspection_cert INNER JOIN
                      customers ON inspection_cert.customer_id = customers.customer_id
WHERE     (customers.customer_id = @c_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="c_id" ColumnName="customer_id" DataSourceName="dam_prover_test.customers" DataTypeServer="int(10) unsigned" DbType="Int32" Direction="Input" ParameterName="@c_id" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="customer_id" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="inspection_id" DataSetColumn="inspection_id" />
              <Mapping SourceColumn="date" DataSetColumn="date" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="comments" DataSetColumn="comments" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="dam_proverConnectionString (MySettings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="True" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT    inspection_cert.inspection_id, inspection_cert.`date`, customers.name, inspection_cert.comments
FROM      inspection_cert INNER JOIN
                      customers ON inspection_cert.customer_id = customers.customer_id
WHERE     inspection_cert.`date` BETWEEN @start AND @end AND customers.customer_id = @c_id</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="start" ColumnName="date" DataSourceName="dam_prover_test.inspection_cert" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@start" Precision="0" ProviderType="Datetime" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="end" ColumnName="date" DataSourceName="dam_prover_test.inspection_cert" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@end" Precision="0" ProviderType="Datetime" Scale="0" Size="0" SourceColumn="date" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="c_id" ColumnName="customer_id" DataSourceName="dam_prover_test.customers" DataTypeServer="int(10) unsigned" DbType="Int32" Direction="Input" ParameterName="@c_id" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="customer_id" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="dam_proverConnectionString (MySettings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByCompanyNumber" GenerateMethods="Both" GenerateShortCommands="True" GeneratorGetMethodName="GetDataByCompanyNumber" GeneratorSourceName="FillByCompanyNumber" GetMethodModifier="Public" GetMethodName="GetDataByCompanyNumber" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetDataByCompanyNumber" UserSourceName="FillByCompanyNumber">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT DISTINCT inspection_cert.inspection_id, inspection_cert.`date`, customers.name, inspection_cert.comments
FROM         inspection_cert INNER JOIN
                      customers ON inspection_cert.customer_id = customers.customer_id INNER JOIN
                      instr ON inspection_cert.inspection_id = instr.inspection_id INNER JOIN
                      instr_info ON instr.instr_id = instr_info.instr_id
WHERE     (instr_info.item_number = 201) AND (instr_info.item_value LIKE @c_number)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="c_number" ColumnName="item_value" DataSourceName="dam_prover_test.instr_info" DataTypeServer="varchar(250)(250)" DbType="String" Direction="Input" ParameterName="@c_number" Precision="0" ProviderType="VarChar" Scale="0" Size="250" SourceColumn="item_value" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="dam_proverConnectionString (MySettings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillBySerialNumber" GenerateMethods="Both" GenerateShortCommands="True" GeneratorGetMethodName="GetDataBySerialNumber" GeneratorSourceName="FillBySerialNumber" GetMethodModifier="Public" GetMethodName="GetDataBySerialNumber" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetDataBySerialNumber" UserSourceName="FillBySerialNumber">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT DISTINCT     inspection_cert.inspection_id, inspection_cert.`date`, customers.name, inspection_cert.comments
FROM         inspection_cert INNER JOIN
                      customers ON inspection_cert.customer_id = customers.customer_id INNER JOIN
                      instr ON inspection_cert.inspection_id = instr.inspection_id
WHERE     (instr.serial_number LIKE @serial_number)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="serial_number" ColumnName="serial_number" DataSourceName="dam_prover_test.instr" DataTypeServer="int(10) unsigned" DbType="Int32" Direction="Input" ParameterName="@serial_number" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="serial_number" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="customersTableAdapter" GeneratorDataComponentClassName="customersTableAdapter" Name="customers" UserDataComponentName="customersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dam_proverConnectionString (MySettings)" DbObjectName="dam_prover_test.customers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="True" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>DELETE FROM `dam_prover_test`.`customers` WHERE ((`name` = @Original_name) AND (`customer_id` = @Original_customer_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="UInt32" Direction="Input" ParameterName="@Original_customer_id" Precision="0" ProviderType="UInt32" Scale="0" Size="0" SourceColumn="customer_id" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>INSERT INTO `dam_prover_test`.`customers` (`name`) VALUES (@name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT     name, customer_id
FROM         customers</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>UPDATE `dam_prover_test`.`customers` SET `name` = @name WHERE ((`name` = @Original_name) AND (`customer_id` = @Original_customer_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="UInt32" Direction="Input" ParameterName="@Original_customer_id" Precision="0" ProviderType="UInt32" Scale="0" Size="0" SourceColumn="customer_id" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="customer_id" DataSetColumn="customer_id" />
            </Mappings>
            <Sources>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InstrumentLookUpTableAdapter" GeneratorDataComponentClassName="InstrumentLookUpTableAdapter" Name="InstrumentLookUp" UserDataComponentName="InstrumentLookUpTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dam_proverConnectionString (MySettings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillBySerial" GenerateMethods="Both" GenerateShortCommands="False" GeneratorGetMethodName="GetData" GeneratorSourceName="FillBySerial" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="False" UserGetMethodName="GetData" UserSourceName="FillBySerial">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT     inspection_cert.inspection_id, inspection_cert.`date`, customers.name, inspection_cert.comments
FROM         inspection_cert INNER JOIN
                      instr ON inspection_cert.inspection_id = instr.inspection_id INNER JOIN
                      customers ON inspection_cert.customer_id = customers.customer_id
WHERE     (instr.serial_number = @serial_number) AND (inspection_cert.inspection_id &lt;&gt; - 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="serial_number" ColumnName="serial_number" DataSourceName="dam_prover_test.instr" DataTypeServer="int(10) unsigned" DbType="Int32" Direction="Input" ParameterName="@serial_number" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="serial_number" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="inspection_id" DataSetColumn="inspection_id" />
              <Mapping SourceColumn="date" DataSetColumn="date" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="comments" DataSetColumn="comments" />
            </Mappings>
            <Sources>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="LoadInspectionCertDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="LoadInspectionCertDataSet" msprop:Generator_DataSetName="LoadInspectionCertDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Inspec" msprop:Generator_UserTableName="Inspec" msprop:Generator_RowDeletedName="InspecRowDeleted" msprop:Generator_RowChangedName="InspecRowChanged" msprop:Generator_RowClassName="InspecRow" msprop:Generator_RowChangingName="InspecRowChanging" msprop:Generator_RowEvArgName="InspecRowChangeEvent" msprop:Generator_RowEvHandlerName="InspecRowChangeEventHandler" msprop:Generator_TableClassName="InspecDataTable" msprop:Generator_TableVarName="tableInspec" msprop:Generator_RowDeletingName="InspecRowDeleting" msprop:Generator_TablePropName="Inspec">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="inspection_id" msprop:Generator_UserColumnName="inspection_id" msprop:Generator_ColumnVarNameInTable="columninspection_id" msprop:Generator_ColumnPropNameInRow="inspection_id" msprop:Generator_ColumnPropNameInTable="inspection_idColumn" type="xs:unsignedInt" />
              <xs:element name="date" msprop:Generator_UserColumnName="date" msprop:Generator_ColumnVarNameInTable="columndate" msprop:Generator_ColumnPropNameInRow="_date" msprop:Generator_ColumnPropNameInTable="dateColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="name" msprop:Generator_UserColumnName="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="comments" msprop:Generator_UserColumnName="comments" msprop:Generator_ColumnPropNameInRow="comments" msprop:Generator_ColumnVarNameInTable="columncomments" msprop:Generator_ColumnPropNameInTable="commentsColumn" type="xs:string" minOccurs="0" />
              <xs:element name="event_log" msprop:Generator_UserColumnName="event_log" msprop:Generator_ColumnPropNameInRow="event_log" msprop:Generator_ColumnVarNameInTable="columnevent_log" msprop:Generator_ColumnPropNameInTable="event_logColumn" type="xs:boolean" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="customers" msprop:Generator_UserTableName="customers" msprop:Generator_RowDeletedName="customersRowDeleted" msprop:Generator_RowChangedName="customersRowChanged" msprop:Generator_RowClassName="customersRow" msprop:Generator_RowChangingName="customersRowChanging" msprop:Generator_RowEvArgName="customersRowChangeEvent" msprop:Generator_RowEvHandlerName="customersRowChangeEventHandler" msprop:Generator_TableClassName="customersDataTable" msprop:Generator_TableVarName="tablecustomers" msprop:Generator_RowDeletingName="customersRowDeleting" msprop:Generator_TablePropName="customers">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="name" msprop:Generator_UserColumnName="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="customer_id" msprop:Generator_UserColumnName="customer_id" msprop:Generator_ColumnVarNameInTable="columncustomer_id" msprop:Generator_ColumnPropNameInRow="customer_id" msprop:Generator_ColumnPropNameInTable="customer_idColumn" type="xs:unsignedInt" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="InstrumentLookUp" msprop:Generator_UserTableName="InstrumentLookUp" msprop:Generator_RowDeletedName="InstrumentLookUpRowDeleted" msprop:Generator_RowChangedName="InstrumentLookUpRowChanged" msprop:Generator_RowClassName="InstrumentLookUpRow" msprop:Generator_RowChangingName="InstrumentLookUpRowChanging" msprop:Generator_RowEvArgName="InstrumentLookUpRowChangeEvent" msprop:Generator_RowEvHandlerName="InstrumentLookUpRowChangeEventHandler" msprop:Generator_TableClassName="InstrumentLookUpDataTable" msprop:Generator_TableVarName="tableInstrumentLookUp" msprop:Generator_RowDeletingName="InstrumentLookUpRowDeleting" msprop:Generator_TablePropName="InstrumentLookUp">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="inspection_id" msprop:Generator_UserColumnName="inspection_id" msprop:Generator_ColumnPropNameInRow="inspection_id" msprop:Generator_ColumnVarNameInTable="columninspection_id" msprop:Generator_ColumnPropNameInTable="inspection_idColumn" type="xs:unsignedInt" />
              <xs:element name="date" msprop:Generator_UserColumnName="date" msprop:Generator_ColumnPropNameInRow="_date" msprop:Generator_ColumnVarNameInTable="columndate" msprop:Generator_ColumnPropNameInTable="dateColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="name" msprop:Generator_UserColumnName="name" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInTable="nameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="comments" msprop:Generator_UserColumnName="comments" msprop:Generator_ColumnPropNameInRow="comments" msprop:Generator_ColumnVarNameInTable="columncomments" msprop:Generator_ColumnPropNameInTable="commentsColumn" type="xs:string" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Inspec" />
      <xs:field xpath="mstns:inspection_id" />
    </xs:unique>
    <xs:unique name="customers_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:customers" />
      <xs:field xpath="mstns:customer_id" />
    </xs:unique>
    <xs:unique name="InstrumentLookUp_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:InstrumentLookUp" />
      <xs:field xpath="mstns:inspection_id" />
    </xs:unique>
  </xs:element>
</xs:schema>