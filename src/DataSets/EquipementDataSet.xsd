<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="EquipementDataSet" targetNamespace="http://tempuri.org/EquipementDataSet.xsd" xmlns:mstns="http://tempuri.org/EquipementDataSet.xsd" xmlns="http://tempuri.org/EquipementDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="dam_proverConnectionString" ConnectionStringObject="" IsAppSettingsProperty="True" Modifier="Assembly" Name="dam_proverConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DAM_Prover.My.MySettings.GlobalReference.Default.dam_proverConnectionString" Provider="MySql.Data.MySqlClient">
          </Connection>
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="equipementTableAdapter" GeneratorDataComponentClassName="equipementTableAdapter" Name="equipement" UserDataComponentName="equipementTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dam_proverConnectionString (MySettings)" DbObjectName="dam_prover_test.equipement" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="False" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>DELETE FROM `dam_prover_test`.`equipement` WHERE ((`code` = @Original_code) AND (`description` = @Original_description) AND (`id` = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="code" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="description" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="UInt32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="UInt32" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>INSERT INTO `dam_prover_test`.`equipement` (`code`, `description`) VALUES (@code, @description)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="code" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="description" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT     code, description, id
FROM         equipement</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>UPDATE `dam_prover_test`.`equipement` SET `code` = @code, `description` = @description WHERE ((`code` = @Original_code) AND (`description` = @Original_description) AND (`id` = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="code" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="description" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="code" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="description" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="UInt32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="UInt32" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="code" DataSetColumn="code" />
              <Mapping SourceColumn="description" DataSetColumn="description" />
              <Mapping SourceColumn="id" DataSetColumn="id" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="dam_proverConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="True" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>INSERT INTO `dam_prover_test`.`equipement` (`code`, `description`) VALUES (@code, @description)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="code" ColumnName="code" DataSourceName="dam_prover_test.equipement" DataTypeServer="varchar(45)(45)" DbType="String" Direction="Input" ParameterName="@code" Precision="0" ProviderType="VarChar" Scale="0" Size="45" SourceColumn="code" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="description" ColumnName="description" DataSourceName="dam_prover_test.equipement" DataTypeServer="varchar(75)(75)" DbType="String" Direction="Input" ParameterName="@description" Precision="0" ProviderType="VarChar" Scale="0" Size="75" SourceColumn="description" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="inspection_equipementTableAdapter" GeneratorDataComponentClassName="inspection_equipementTableAdapter" Name="inspection_equipement" UserDataComponentName="inspection_equipementTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dam_proverConnectionString (MySettings)" DbObjectName="dam_prover_test.inspection_equipement" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="True" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>DELETE FROM `dam_prover_test`.`inspection_equipement` WHERE ((`inspec_id` = @Original_inspec_id) AND (`equip_id` = @Original_equip_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="UInt32" Direction="Input" ParameterName="@Original_inspec_id" Precision="0" ProviderType="UInt32" Scale="0" Size="0" SourceColumn="inspec_id" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="UInt32" Direction="Input" ParameterName="@Original_equip_id" Precision="0" ProviderType="UInt32" Scale="0" Size="0" SourceColumn="equip_id" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>INSERT INTO `dam_prover_test`.`inspection_equipement` (`inspec_id`, `equip_id`) VALUES (@inspec_id, @equip_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="UInt32" Direction="Input" ParameterName="@inspec_id" Precision="0" ProviderType="UInt32" Scale="0" Size="0" SourceColumn="inspec_id" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="UInt32" Direction="Input" ParameterName="@equip_id" Precision="0" ProviderType="UInt32" Scale="0" Size="0" SourceColumn="equip_id" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT     inspection_equipement.*
FROM         inspection_equipement</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>UPDATE `dam_prover_test`.`inspection_equipement` SET `inspec_id` = @inspec_id, `equip_id` = @equip_id WHERE ((`inspec_id` = @Original_inspec_id) AND (`equip_id` = @Original_equip_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="UInt32" Direction="Input" ParameterName="@inspec_id" Precision="0" ProviderType="UInt32" Scale="0" Size="0" SourceColumn="inspec_id" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="UInt32" Direction="Input" ParameterName="@equip_id" Precision="0" ProviderType="UInt32" Scale="0" Size="0" SourceColumn="equip_id" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="UInt32" Direction="Input" ParameterName="@Original_inspec_id" Precision="0" ProviderType="UInt32" Scale="0" Size="0" SourceColumn="inspec_id" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="UInt32" Direction="Input" ParameterName="@Original_equip_id" Precision="0" ProviderType="UInt32" Scale="0" Size="0" SourceColumn="equip_id" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="inspec_id" DataSetColumn="inspec_id" />
              <Mapping SourceColumn="equip_id" DataSetColumn="equip_id" />
            </Mappings>
            <Sources>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="meter_indexTableAdapter" GeneratorDataComponentClassName="meter_indexTableAdapter" Name="meter_index" UserDataComponentName="meter_indexTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dam_proverConnectionString (MySettings)" DbObjectName="dam_prover_test.meter_index" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="True" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>DELETE FROM meter_index
WHERE     (meter_index_id = @meter_index_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="meter_index_id" ColumnName="meter_index_id" DataSourceName="dam_prover_test.meter_index" DataTypeServer="int(10) unsigned" DbType="Int32" Direction="Input" ParameterName="@meter_index_id" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="meter_index_id" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>INSERT INTO meter_index
                      (meter_index_id, type, MeterDisplacement)
VALUES     (@meter_index_id, @type, @MeterDisplacement)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="meter_index_id" ColumnName="meter_index_id" DataSourceName="dam_prover_test.meter_index" DataTypeServer="int(10) unsigned" DbType="Int32" Direction="Input" ParameterName="@meter_index_id" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="meter_index_id" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="type" ColumnName="type" DataSourceName="dam_prover_test.meter_index" DataTypeServer="varchar(200)(200)" DbType="String" Direction="Input" ParameterName="@type" Precision="0" ProviderType="VarChar" Scale="0" Size="200" SourceColumn="type" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="MeterDisplacement" ColumnName="MeterDisplacement" DataSourceName="dam_prover_test.meter_index" DataTypeServer="double" DbType="Decimal" Direction="Input" ParameterName="@MeterDisplacement" Precision="22" ProviderType="Double" Scale="0" Size="0" SourceColumn="MeterDisplacement" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT     meter_index_id, type, MeterDisplacement
FROM         meter_index
ORDER BY meter_index_id</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>UPDATE    meter_index
SET              type = @type, MeterDisplacement = @meterdisplacement
WHERE     (meter_index_id = @meter_index_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="type" ColumnName="type" DataSourceName="dam_prover_test.meter_index" DataTypeServer="varchar(200)(200)" DbType="String" Direction="Input" ParameterName="@type" Precision="0" ProviderType="VarChar" Scale="0" Size="200" SourceColumn="type" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="meterdisplacement" ColumnName="MeterDisplacement" DataSourceName="dam_prover_test.meter_index" DataTypeServer="double" DbType="Decimal" Direction="Input" ParameterName="@meterdisplacement" Precision="22" ProviderType="Double" Scale="0" Size="0" SourceColumn="MeterDisplacement" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="meter_index_id" ColumnName="meter_index_id" DataSourceName="dam_prover_test.meter_index" DataTypeServer="int(10) unsigned" DbType="Int32" Direction="Input" ParameterName="@meter_index_id" Precision="0" ProviderType="Int32" Scale="0" Size="0" SourceColumn="meter_index_id" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="meter_index_id" DataSetColumn="meter_index_id" />
              <Mapping SourceColumn="type" DataSetColumn="type" />
              <Mapping SourceColumn="MeterDisplacement" DataSetColumn="MeterDisplacement" />
            </Mappings>
            <Sources>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="EquipementDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="EquipementDataSet" msprop:Generator_DataSetName="EquipementDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="equipement" msprop:Generator_UserTableName="equipement" msprop:Generator_RowDeletedName="equipementRowDeleted" msprop:Generator_RowChangedName="equipementRowChanged" msprop:Generator_RowClassName="equipementRow" msprop:Generator_RowChangingName="equipementRowChanging" msprop:Generator_RowEvArgName="equipementRowChangeEvent" msprop:Generator_RowEvHandlerName="equipementRowChangeEventHandler" msprop:Generator_TableClassName="equipementDataTable" msprop:Generator_TableVarName="tableequipement" msprop:Generator_RowDeletingName="equipementRowDeleting" msprop:Generator_TablePropName="equipement">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="code" msprop:Generator_UserColumnName="code" msprop:Generator_ColumnPropNameInRow="code" msprop:Generator_ColumnVarNameInTable="columncode" msprop:Generator_ColumnPropNameInTable="codeColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="45" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="description" msprop:Generator_UserColumnName="description" msprop:Generator_ColumnPropNameInRow="description" msprop:Generator_ColumnVarNameInTable="columndescription" msprop:Generator_ColumnPropNameInTable="descriptionColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="75" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="id" msdata:AutoIncrement="true" msprop:Generator_UserColumnName="id" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInTable="idColumn" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="inspection_equipement" msprop:Generator_UserTableName="inspection_equipement" msprop:Generator_RowDeletedName="inspection_equipementRowDeleted" msprop:Generator_RowChangedName="inspection_equipementRowChanged" msprop:Generator_RowClassName="inspection_equipementRow" msprop:Generator_RowChangingName="inspection_equipementRowChanging" msprop:Generator_RowEvArgName="inspection_equipementRowChangeEvent" msprop:Generator_RowEvHandlerName="inspection_equipementRowChangeEventHandler" msprop:Generator_TableClassName="inspection_equipementDataTable" msprop:Generator_TableVarName="tableinspection_equipement" msprop:Generator_RowDeletingName="inspection_equipementRowDeleting" msprop:Generator_TablePropName="inspection_equipement">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="inspec_id" msprop:Generator_UserColumnName="inspec_id" msprop:Generator_ColumnVarNameInTable="columninspec_id" msprop:Generator_ColumnPropNameInRow="inspec_id" msprop:Generator_ColumnPropNameInTable="inspec_idColumn" type="xs:unsignedInt" />
              <xs:element name="equip_id" msprop:Generator_UserColumnName="equip_id" msprop:Generator_ColumnVarNameInTable="columnequip_id" msprop:Generator_ColumnPropNameInRow="equip_id" msprop:Generator_ColumnPropNameInTable="equip_idColumn" type="xs:unsignedInt" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="meter_index" msprop:Generator_UserTableName="meter_index" msprop:Generator_RowDeletedName="meter_indexRowDeleted" msprop:Generator_RowChangedName="meter_indexRowChanged" msprop:Generator_RowClassName="meter_indexRow" msprop:Generator_RowChangingName="meter_indexRowChanging" msprop:Generator_RowEvArgName="meter_indexRowChangeEvent" msprop:Generator_RowEvHandlerName="meter_indexRowChangeEventHandler" msprop:Generator_TableClassName="meter_indexDataTable" msprop:Generator_TableVarName="tablemeter_index" msprop:Generator_RowDeletingName="meter_indexRowDeleting" msprop:Generator_TablePropName="meter_index">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="meter_index_id" msprop:Generator_UserColumnName="meter_index_id" msprop:Generator_ColumnPropNameInRow="meter_index_id" msprop:Generator_ColumnVarNameInTable="columnmeter_index_id" msprop:Generator_ColumnPropNameInTable="meter_index_idColumn" type="xs:unsignedInt" />
              <xs:element name="type" msprop:Generator_UserColumnName="type" msprop:Generator_ColumnPropNameInRow="type" msprop:Generator_ColumnVarNameInTable="columntype" msprop:Generator_ColumnPropNameInTable="typeColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MeterDisplacement" msprop:Generator_UserColumnName="MeterDisplacement" msprop:Generator_ColumnPropNameInRow="MeterDisplacement" msprop:Generator_ColumnVarNameInTable="columnMeterDisplacement" msprop:Generator_ColumnPropNameInTable="MeterDisplacementColumn" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:equipement" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="inspection_equipement_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:inspection_equipement" />
      <xs:field xpath="mstns:inspec_id" />
      <xs:field xpath="mstns:equip_id" />
    </xs:unique>
  </xs:element>
</xs:schema>